@model BankAccountApp.Web.Models.BankAccountViewModel

@{
    ViewBag.Title = "Create new bank account";
}

<h2>New bank account</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div>
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
            <br />
            <div>
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                <br />
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            @Html.LabelFor(model => model.SecondName, htmlAttributes: new { @class = "control-label" })
            <br />
            <div>
                @Html.EditorFor(model => model.SecondName, new { htmlAttributes = new { @class = "form-control" } })
                <br />
                @*@Html.ValidationMessageFor(model => model.SecondName, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div>
            @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label" })
            <br />
            @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control" } })
            <br />
            @*@Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })*@
        </div>
        <div>
            @Html.LabelFor(model => model.BonusPoints, htmlAttributes: new { @class = "control-label" })
            <br />
            @Html.EditorFor(model => model.BonusPoints, new { htmlAttributes = new { @class = "form-control" } })
            <br />
        </div>
        <div class="row">
            @Html.LabelFor(model => model.IsOpened, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.IsOpened, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div>
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
            <br />
            @Html.DropDownList("Type", ViewBag.AccountTypes as SelectList, new { @class = "btn btn-dark dropdown-toggle" })
            <br />
        </div>
        <br />
        <input type="submit" value="Add" class="btn btn-primary btn-lg" />
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
